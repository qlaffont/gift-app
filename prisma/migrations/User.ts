// This file was generated by prisma-field-encryption.

import type { PrismaClient, User } from '@prisma/client';
import {
  defaultProgressReport,
  ProgressReportCallback,
  visitRecords,
} from 'prisma-field-encryption/dist/generator/runtime';

type Cursor = User['id'];

export async function migrate(
  client: PrismaClient,
  reportProgress: ProgressReportCallback = defaultProgressReport,
): Promise<number> {
  return visitRecords<PrismaClient, Cursor>({
    modelName: 'User',
    client,
    getTotalCount: client.user.count,
    migrateRecord,
    reportProgress,
  });
}

async function migrateRecord(client: PrismaClient, cursor: Cursor | undefined) {
  return await client.$transaction(async (tx) => {
    const record = await tx.user.findFirst({
      take: 1,
      skip: cursor === undefined ? undefined : 1,
      ...(cursor === undefined
        ? {}
        : {
            cursor: {
              id: cursor,
            },
          }),
      orderBy: {
        id: 'asc',
      },
      select: {
        id: true,
        email: true,
        name: true,
        description: true,
        discordUserId: true,
        googleUserId: true,
      },
    });
    if (!record) {
      return cursor;
    }
    await tx.user.update({
      where: {
        id: record.id,
      },
      data: {
        email: record.email,
        name: record.name,
        description: record.description,
        discordUserId: record.discordUserId,
        googleUserId: record.googleUserId,
      },
    });
    return record.id;
  });
}

/**
 * Internal model:
 * {
 *   "cursor": "id",
 *   "fields": {
 *     "email": {
 *       "encrypt": true,
 *       "strictDecryption": false,
 *       "hash": {
 *         "targetField": "emailHash",
 *         "algorithm": "sha256",
 *         "salt": "XQWgju4bgKNya62NXrTW",
 *         "inputEncoding": "utf8",
 *         "outputEncoding": "hex"
 *       }
 *     },
 *     "name": {
 *       "encrypt": true,
 *       "strictDecryption": false
 *     },
 *     "description": {
 *       "encrypt": true,
 *       "strictDecryption": false
 *     },
 *     "discordUserId": {
 *       "encrypt": true,
 *       "strictDecryption": false,
 *       "hash": {
 *         "targetField": "discordUserIdHash",
 *         "algorithm": "sha256",
 *         "salt": "XQWgju4bgKNya62NXrTW",
 *         "inputEncoding": "utf8",
 *         "outputEncoding": "hex"
 *       }
 *     },
 *     "googleUserId": {
 *       "encrypt": true,
 *       "strictDecryption": false,
 *       "hash": {
 *         "targetField": "googleUserIdHash",
 *         "algorithm": "sha256",
 *         "salt": "XQWgju4bgKNya62NXrTW",
 *         "inputEncoding": "utf8",
 *         "outputEncoding": "hex"
 *       }
 *     }
 *   },
 *   "connections": {
 *     "tokens": {
 *       "modelName": "Token",
 *       "isList": true
 *     },
 *     "giftLists": {
 *       "modelName": "GiftList",
 *       "isList": true
 *     },
 *     "giftsTaken": {
 *       "modelName": "Gift",
 *       "isList": true
 *     },
 *     "giftListUserAccesses": {
 *       "modelName": "GiftListUserAccess",
 *       "isList": true
 *     }
 *   }
 * }
 */
